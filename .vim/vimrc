au BufRead,BufNewFile *.8xp set filetype=cel

" vim-pathogen
execute pathogen#infect()

" Enter the current millennium
set nocompatible

" Enable syntax and plugins
syntax enable
filetype plugin on

set encoding=UTF-8
set t_Co=256
" colorscheme molokai

" Splits
set splitright

" Search down all subfolders
" Provides tab-completion for all file-related tasks
set path+=**

" Show autocomplete list
set wildmenu

" Necessary if you want to use netrw
let g:netrw_banner=0        " disable annoying banner
let g:netrw_browse_split=4  " open in prior window
let g:netrw_altv=1          " open splits to the right
let g:netrw_liststyle=3     " tree view

" Get rid of objects in C projects
let NERDTreeIgnore=['\~$', '.o$', 'bower_components', 'node_modules', '__pycache__']
let NERDTreeWinSize=25

" " Start NERDTree. If a file is specified, move the cursor to its window.
" autocmd StdinReadPre * let s:std_in=1
" autocmd VimEnter * NERDTree | if argc() > 0 || exists("s:std_in") | wincmd p | endif

" " Exit Vim if NERDTree is the only window remaining in the only tab.
" autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

" If another buffer tries to replace NERDTree, put it in the other window, and bring back NERDTree.
autocmd BufEnter * if bufname('#') =~ 'NERD_tree_\d\+' && bufname('%') !~ 'NERD_tree_\d\+' && winnr('$') > 1 |
    \ let buf=bufnr() | buffer# | execute "normal! \<C-W>w" | execute 'buffer'.buf | endif

" hide gitignore'd files
let g:netrw_list_hide=netrw_gitignore#Hide()
" hide dotfiles by default (this is the string toggled by netrw-gh)
let g:netrw_list_hide.=',\(^\|\s\s\)\zs\.\S\+'

" Window display
set showcmd ruler laststatus=2

" Splits
set splitright

" Typing behavior
set backspace=indent,eol,start
set showmatch
set wildmode=full
set complete-=i

" Tag finding
command! MakeTags !ctags -R .

" Formatting
" set nowrap
set tabstop=2 shiftwidth=2 softtabstop=2
set foldlevelstart=2

" set number

" augroup numbertoggle
" 	autocmd!
" 	autocmd BufEnter,FocusGained,InsertLeave,WinEnter * if &nu && mode() != "i" | set rnu   | endif
" 	autocmd BufLeave,FocusLost,InsertEnter,WinLeave * if &nu										| set nornu | endif

let g:markdown_fenced_languages = ['html', 'python', 'bash=sh']

" Session saving
set sessionoptions=blank,buffers,curdir,folds,help,tabpages,winsize,localoptions

" Key mappings

" Run shell command
" ... and print output
nnoremap <C-h> :.w !bash<CR>
" ... and append output
nnoremap <C-l> yyp!!bash<CR>

" Newlines
nnoremap <C-j> o<ESC>k
nnoremap <C-k> O<ESC>j

" Create new html file and set cursor at title
nnoremap ,html :-1read $HOME/.vim/.skeleton.html<CR>3jwf>a

" Editing vimrc
nnoremap ,v :source $MYVIMRC<CR>
nnoremap ,e :edit $MYVIMRC<CR>

" Change indent continuously
vmap < <gv
vmap > >gv

" camelCase => snake_case
vnoremap ,case :s/\v\C(([a-z]+)([A-Z]))/\2_\l\3/g<CR>
